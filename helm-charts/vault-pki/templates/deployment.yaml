{{- if not .Values.vault.ha.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault-pki.fullname" . }}
  labels:
    {{- include "vault-pki.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "vault-pki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vault-pki.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vault-pki.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.vault.securityContext | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "vault-pki.fullname" . }}-config
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "vault-pki.fullname" . }}-data
        - name: softhsm-tokens
          persistentVolumeClaim:
            claimName: {{ include "vault-pki.fullname" . }}-softhsm
        {{- if .Values.vault.tls.enabled }}
        - name: vault-tls
          secret:
            secretName: {{ .Values.vault.tls.secretName | default (printf "%s-tls" (include "vault-pki.fullname" .)) }}
        {{- end }}
        {{- if .Values.vault.extraVolumes }}
        {{- toYaml .Values.vault.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        - name: vault
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          image: "{{ .Values.vault.image.repository }}:{{ .Values.vault.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.vault.image.pullPolicy }}
          command:
            - "vault"
            - "server"
            - "-config=/vault/config/vault-config.hcl"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_ADDR
              value: "https://127.0.0.1:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_LOG_LEVEL
              value: "info"
            {{- with .Values.vault.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
            - name: https-internal
              containerPort: 8201
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: data
              mountPath: /vault/data
            - name: softhsm-tokens
              mountPath: /softhsm/tokens
            {{- if .Values.vault.tls.enabled }}
            - name: vault-tls
              mountPath: /vault/tls
            {{- end }}
            {{- if .Values.vault.extraVolumeMounts }}
            {{- toYaml .Values.vault.extraVolumeMounts | nindent 12 }}
            {{- end }}
          {{- if .Values.vault.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true&sealedok=true&uninitcode=200
              port: 8200
              scheme: {{ if .Values.vault.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
            failureThreshold: {{ .Values.vault.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.vault.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.vault.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.vault.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.vault.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.vault.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true
              port: 8200
              scheme: {{ if .Values.vault.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
            failureThreshold: {{ .Values.vault.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.vault.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.vault.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.vault.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.vault.readinessProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.vault.resources | nindent 12 }}
        
        - name: softhsm
          image: "{{ .Values.softhsm.image.repository }}:{{ .Values.softhsm.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.softhsm.image.pullPolicy }}
          env:
            - name: SOFTHSM2_CONF
              value: /etc/softhsm2/softhsm2.conf
          volumeMounts:
            - name: config
              mountPath: /etc/softhsm2/softhsm2.conf
              subPath: softhsm2.conf
            - name: softhsm-tokens
              mountPath: /softhsm/tokens
          resources:
            {{- toYaml .Values.softhsm.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
